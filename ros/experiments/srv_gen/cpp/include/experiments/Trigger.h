/* Auto-generated by genmsg_cpp for file /home/flybowl/ros_workspace/git/Flyatar2/ros/experiments/srv/Trigger.srv */
#ifndef EXPERIMENTS_SERVICE_TRIGGER_H
#define EXPERIMENTS_SERVICE_TRIGGER_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace experiments
{
template <class ContainerAllocator>
struct TriggerRequest_ {
  typedef TriggerRequest_<ContainerAllocator> Type;

  TriggerRequest_()
  : triggered(false)
  {
  }

  TriggerRequest_(const ContainerAllocator& _alloc)
  : triggered(false)
  {
  }

  typedef uint8_t _triggered_type;
  uint8_t triggered;


private:
  static const char* __s_getDataType_() { return "experiments/TriggerRequest"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "469151764910cbbe8342c54a9e6e6a95"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "0995ba95fea5a8bded507047fa6164da"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "bool triggered\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, triggered);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, triggered);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(triggered);
    return size;
  }

  typedef boost::shared_ptr< ::experiments::TriggerRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::experiments::TriggerRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct TriggerRequest
typedef  ::experiments::TriggerRequest_<std::allocator<void> > TriggerRequest;

typedef boost::shared_ptr< ::experiments::TriggerRequest> TriggerRequestPtr;
typedef boost::shared_ptr< ::experiments::TriggerRequest const> TriggerRequestConstPtr;


template <class ContainerAllocator>
struct TriggerResponse_ {
  typedef TriggerResponse_<ContainerAllocator> Type;

  TriggerResponse_()
  : triggered(false)
  {
  }

  TriggerResponse_(const ContainerAllocator& _alloc)
  : triggered(false)
  {
  }

  typedef uint8_t _triggered_type;
  uint8_t triggered;


private:
  static const char* __s_getDataType_() { return "experiments/TriggerResponse"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "469151764910cbbe8342c54a9e6e6a95"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "0995ba95fea5a8bded507047fa6164da"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "bool triggered\n\
\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, triggered);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, triggered);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(triggered);
    return size;
  }

  typedef boost::shared_ptr< ::experiments::TriggerResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::experiments::TriggerResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct TriggerResponse
typedef  ::experiments::TriggerResponse_<std::allocator<void> > TriggerResponse;

typedef boost::shared_ptr< ::experiments::TriggerResponse> TriggerResponsePtr;
typedef boost::shared_ptr< ::experiments::TriggerResponse const> TriggerResponseConstPtr;

struct Trigger
{

typedef TriggerRequest Request;
typedef TriggerResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct Trigger
} // namespace experiments

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::experiments::TriggerRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::experiments::TriggerRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::experiments::TriggerRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "469151764910cbbe8342c54a9e6e6a95";
  }

  static const char* value(const  ::experiments::TriggerRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x469151764910cbbeULL;
  static const uint64_t static_value2 = 0x8342c54a9e6e6a95ULL;
};

template<class ContainerAllocator>
struct DataType< ::experiments::TriggerRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "experiments/TriggerRequest";
  }

  static const char* value(const  ::experiments::TriggerRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::experiments::TriggerRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bool triggered\n\
\n\
";
  }

  static const char* value(const  ::experiments::TriggerRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::experiments::TriggerRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::experiments::TriggerResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::experiments::TriggerResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::experiments::TriggerResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "469151764910cbbe8342c54a9e6e6a95";
  }

  static const char* value(const  ::experiments::TriggerResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x469151764910cbbeULL;
  static const uint64_t static_value2 = 0x8342c54a9e6e6a95ULL;
};

template<class ContainerAllocator>
struct DataType< ::experiments::TriggerResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "experiments/TriggerResponse";
  }

  static const char* value(const  ::experiments::TriggerResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::experiments::TriggerResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bool triggered\n\
\n\
\n\
";
  }

  static const char* value(const  ::experiments::TriggerResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::experiments::TriggerResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::experiments::TriggerRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.triggered);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct TriggerRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::experiments::TriggerResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.triggered);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct TriggerResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<experiments::Trigger> {
  static const char* value() 
  {
    return "0995ba95fea5a8bded507047fa6164da";
  }

  static const char* value(const experiments::Trigger&) { return value(); } 
};

template<>
struct DataType<experiments::Trigger> {
  static const char* value() 
  {
    return "experiments/Trigger";
  }

  static const char* value(const experiments::Trigger&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<experiments::TriggerRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "0995ba95fea5a8bded507047fa6164da";
  }

  static const char* value(const experiments::TriggerRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<experiments::TriggerRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "experiments/Trigger";
  }

  static const char* value(const experiments::TriggerRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<experiments::TriggerResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "0995ba95fea5a8bded507047fa6164da";
  }

  static const char* value(const experiments::TriggerResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<experiments::TriggerResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "experiments/Trigger";
  }

  static const char* value(const experiments::TriggerResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // EXPERIMENTS_SERVICE_TRIGGER_H

