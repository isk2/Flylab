# Calibration:
# Todo: Simplify calibration, change calibration data location, save all data automatically


0 ############################### Preliminary System Stuff:
# Create calibration directory.
sudo mkdir /cameras
sudo chgrp video cameras/
sudo chmod g+rwx cameras/
groups   # (If "video" isn't listed, then "sudo usermod -a -G video username").


1 ############################### Point to your hardware:
roscd config
cd launch
# Edit (or create) a .launch file that describes your hardware (see flydrome.launch for an example).
# Edit hardware.launch to point to your .launch file.




2 ############################### Adjust Camera Exposure:
# Start the camera node.
roslaunch camera1394v2 flyatar_camera.launch &


# Start the camera viewer.  (Might need to "rosmake image_view" first).
rosrun image_view image_view image:=camera/image_raw &   


# Open the camera properties window.
rosrun dynamic_reconfigure reconfigure_gui camera1394v2_node &


# Adjust brightness, exposure, gain, and shutter.
# Record settings in Flyatar/ros/calibration/flyatar_calibration/calibration_data/settings_basler_a622f.yaml
# Close the Dynamic Reconfigure window.


# Kill the camera node.
kill `ps a -o pid,args --no-headers | grep camera1394 | grep flyatar | cut -d ' ' -f 1`


3 ############################### Camera Intrinsic Parameters (i.e. Lens distortion):
rosdep install camera_calibration
rosmake camera_calibration
rosmake image_proc

# Launch the camera node with adjusted settings.
roslaunch camera1394v2 flyatar_camera.launch &

# Calibrate for distortion.
# Print out ~/git/Flyatar/ros/calibration/flyatar_calibration/patterns/camera_calibration_pattern_30mm.pdf in 1:1 scale
# Measure each checker to make sure it is 30mm, then tape pattern to something flat
# Unmount camera from rig if necessary to give calibration pattern plenty of room to move
rosrun camera_calibration cameracalibrator.py --size 8x6 --square 0.030 image:=/camera/image_raw camera:=/camera

# Wave 30mm checkerboard pattern in front of camera until calibrate button activates
# Click <calibrate> button (will take several minutes)
# Click <commit> button (writes data to /cameras/basler_a622f_calibration.yaml)


4 ############################### Camera Extrinsic Parameters (i.e. Relationship of Camera to Arena):
# Mount camera on flyatar rig, positioned so that the arena is roughly centered in image.
roslaunch flyatar_calibration CameraPlate.launch

# Use the following command to move the center and radius of the circle to correspond to the arena.
rostopic pub -1 Joystick/Commands geometry_msgs/Point -- dx dy dr (where dx,dy,dr are replaced with numbers)

# Record mask radius and camera_plate_origin info into calibration_camera_plate.launch
# Print ~/git/Flyatar/ros/calibration/flyatar_calibration/patterns/camera_plate_calibration_pattern.pdf in 1:1 scale
# Measure each checker to make sure it is 15mm, then use scissors to cut along circular line surrounding pattern
# Place cicular paper containing the checkerboard pattern on plate
# Record rvec and tvec info into calibration_camera_plate.launch, the values appear on the image if the calibration is successful
# Ctrl-c to shutdown CameraPlate.launch


5 ############################### Acquire a New Background Image:
# Remove all objects from plate, then:
rm /cameras/background.png
roslaunch track_image_contours track_image_contours_tf.launch


6 ############################### Stage Extrinsic Parameters (i.e. Relationship of Stage to Arena):
# Calibrate the Stage/Plate transform, and get robot image values.
# place magnet on plate, check to see if contour is found properly
# ctrl-c to shutdown track_image_contours_view_images.launch
# reset power on Atmel motorcontroller, wait for motors to home
roslaunch flyatar_calibration StagePlate.launch

# The magnet will drive in a spiral pattern to cover the plate.  After a number of cycles, the calibration values should converge.
# Record translation vector and quaternion info in calibration_stage_plate.launch

### Record robot_min_ecc, robot_max_ecc, robot_min_area, robot_max_area 
###   in calibration_robotimage.launch
# Ctrl-c to shutdown StagePlate.launch


