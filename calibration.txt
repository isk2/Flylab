###############################################################################################################
###############################################################################################################
##  Calibration Overview:  
##  The steps below result in several files specific to your camera, camera position, actuator hardware, etc:
##  	<your device name>.launch                          The main launch file to make your device available in ROS.
##  	camera.launch                                      The launch file for the camera mounted to your experimental device.
##  	/cameras/<your device name>_calibration.yaml       Contains distortion & other camera parameters.
##  	/cameras/background.png                            Background image of an empty arena.
###############################################################################################################
###############################################################################################################


1 ############################### Point to your hardware:
# Determine the name of your experimental hardware, i.e. <your device name>
<ctrl> + <alt> + T        # To open a new terminal window.
roscd config/launch
gedit hardware.launch
# Edit hardware.launch to point to your .launch file, e.g. racetrack.launch



2 ############################### Adjust Camera Exposure:
# Start the camera node.
<ctrl> + <shift> + T        # To open a new terminal window tab.
roslaunch <your device name> camera.launch


# Start the camera viewer.
<ctrl> + <shift> + T        # To open a new terminal window tab.
rosrun image_view image_view image:=camera/image_raw   


# Open the camera properties window.
<ctrl> + <shift> + T        # To open a new terminal window tab.
rosrun dynamic_reconfigure reconfigure_gui camera


# Adjust mode, brightness, exposure, gain, shutter, etc.
# Edit "params_camera.yaml" with the new settings, for example:
#     ~/git/Flylab/ros/racetrack/launch/params_camera.yaml
# Close the Dynamic Reconfigure window.


# Kill the camera node.
<ctrl>+C in the terminal window tab where you launched the camera,


3 ############################### Camera Intrinsic Parameters (i.e. Lens distortion):
# Launch the camera node with adjusted settings.
roslaunch <your device name> camera.launch

# Calibrate for distortion.
# Print out ~/git/Flylab/ros/calibration/patterns/camera_calibration_pattern_30mm.pdf in 1:1 scale
# Measure each checker to make sure it is 30mm, then tape pattern to something flat
# Unmount camera from rig if necessary to give calibration pattern plenty of room to move
<ctrl> + <shift> + T        # To open a new terminal window tab.
rosrun camera_calibration cameracalibrator.py --size 8x6 --square 0.030 image:=/camera/image_raw camera:=/camera

# Wave 30mm checkerboard pattern in front of camera until all bars turn green and calibrate button activates
# Click <calibrate>  (will take several minutes)
# Click <commit>  (writes data to ~/.ros/camera_info/<guid>.yaml)

# Kill the camera and camera_calibrator.
<ctrl>+C in the terminal window tab where you launched the camera,
<ctrl>+C in the terminal window tab where you launched the camera_calibration,


4 ############################### Camera Extrinsic Parameters (i.e. Relationship of Camera to Arena):
# Print ~/git/Flylab/ros/calibration/patterns/camera_arena_calibration_pattern.pdf in a scale appropriate for your rig.
# Measure the checker square size, and enter that number (in millimeters) in params_calibration.launch  

# Mount camera on flylab rig, positioned so that the arena is roughly centered in image.
roscd config/launch
gedit hardware.launch
# Make sure it points to <your device name>.launch, save & exit.
roslaunch calibration CameraArena.launch

# Use the following command to move the center and radius of the circle to correspond to the arena.
rostopic pub -1 Joystick/Commands geometry_msgs/Point -- dx dy dr            #(where dx,dy,dr are replaced with numbers)

# Place circular paper containing the checkerboard pattern on arena

roscd <your device name>/launch
# Edit params_calibration.launch with mask/x, mask/y, mask/radius, etc. 
# Edit calibration.launch with average rvec and tvec values (after they stabilize).
# <ctrl>+C to shutdown CameraArena.launch


5 ############################### Acquire a New Background Image:
# Remove all objects from arena, then:
rm /cameras/background.png
roslaunch experiments <any experiment>.launch
# After the background.png file is written, place the magnet in the arena.

# Adjust the diff_threshold so that contours look good.
rosparam set tracking/diff_threshold <value>
# Once you have figured out the correct value, save it in the file "params_tracking.yaml" 
# <ctrl>+C to kill the experiment.


6 ############################### Stage Extrinsic Parameters (i.e. Relationship of Stage to Arena):
roscd config/launch
gedit hardware.launch
# Make sure it points to <your device name>.launch, save & exit.

roslaunch calibration StageArena.launch

# The magnet will drive in a spiral pattern to cover the arena.  After a number of cycles, the calibration values should converge.
# Edit calibration.launch with translation vector and quaternion values.
# <ctrl>+C to shutdown StageArena.launch


